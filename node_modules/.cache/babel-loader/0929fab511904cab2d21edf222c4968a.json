{"ast":null,"code":"var _jsxFileName = \"/Users/musubiappleidgmail.com/Desktop/Projects/Quiz-trial/src/Components/Decoded.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nconst decodeHTML = function (html) {\n  const txt = document.createElement('textarea');\n  txt.innerHTML = html;\n  return txt.value;\n};\n\nconst Decoded = () => {\n  const encodedQuestions = useSelector(state => state.questions);\n  useEffect(() => {\n    const decodedQuestions = encodedQuestions.map(q => {\n      return { ...q,\n        question: decodeHTML(q.question),\n        correct_answer: decodeHTML(q.correct_answer),\n        incorrect_answers: q.incorrect_answers.map(a => decodeHTML(a))\n      };\n    });\n    console.log(decodedQuestions);\n    setQuestions();\n  }, [encodedQuestions]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 18\n    }\n  }, encodedQuestions.map((result, i) => /*#__PURE__*/React.createElement(\"li\", {\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, \"q: \", result.question, \"a: \", result.correct_answer)))));\n};\n\nexport default Decoded;","map":{"version":3,"sources":["/Users/musubiappleidgmail.com/Desktop/Projects/Quiz-trial/src/Components/Decoded.js"],"names":["React","useState","useEffect","useSelector","useDispatch","decodeHTML","html","txt","document","createElement","innerHTML","value","Decoded","encodedQuestions","state","questions","decodedQuestions","map","q","question","correct_answer","incorrect_answers","a","console","log","setQuestions","result","i"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;;AAEA,MAAMC,UAAU,GAAG,UAAUC,IAAV,EAAgB;AAC/B,QAAMC,GAAG,GAAGC,QAAQ,CAACC,aAAT,CAAuB,UAAvB,CAAZ;AACAF,EAAAA,GAAG,CAACG,SAAJ,GAAgBJ,IAAhB;AACA,SAAOC,GAAG,CAACI,KAAX;AACD,CAJH;;AAOE,MAAMC,OAAO,GAAG,MAAM;AACpB,QAAMC,gBAAgB,GAAGV,WAAW,CAAEW,KAAD,IAAWA,KAAK,CAACC,SAAlB,CAApC;AAEAb,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMc,gBAAgB,GAAGH,gBAAgB,CAACI,GAAjB,CAAqBC,CAAC,IAAI;AACjD,aAAO,EACL,GAAGA,CADE;AAELC,QAAAA,QAAQ,EAAEd,UAAU,CAACa,CAAC,CAACC,QAAH,CAFf;AAGLC,QAAAA,cAAc,EAAEf,UAAU,CAACa,CAAC,CAACE,cAAH,CAHrB;AAILC,QAAAA,iBAAiB,EAAEH,CAAC,CAACG,iBAAF,CAAoBJ,GAApB,CAAwBK,CAAC,IAAIjB,UAAU,CAACiB,CAAD,CAAvC;AAJd,OAAP;AAMD,KAPwB,CAAzB;AAQEC,IAAAA,OAAO,CAACC,GAAR,CAAYR,gBAAZ;AACFS,IAAAA,YAAY;AACb,GAXM,EAWJ,CAACZ,gBAAD,CAXI,CAAT;AAYA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACRA,gBAAgB,CAACI,GAAjB,CAAqB,CAACS,MAAD,EAAQC,CAAR,kBACpB;AAAI,IAAA,GAAG,EAAIA,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YACMD,MAAM,CAACP,QADb,SAGMO,MAAM,CAACN,cAHb,CADD,CADQ,CAAL,CADJ,CADJ;AAgBH,CA/BC;;AAiCF,eAAeR,OAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nconst decodeHTML = function (html) {\n    const txt = document.createElement('textarea')\n    txt.innerHTML = html\n    return txt.value\n  }\n\n\n  const Decoded = () => {\n    const encodedQuestions = useSelector((state) => state.questions)\n\n    useEffect(() => {\n        const decodedQuestions = encodedQuestions.map(q => {\n          return {\n            ...q,\n            question: decodeHTML(q.question),\n            correct_answer: decodeHTML(q.correct_answer),\n            incorrect_answers: q.incorrect_answers.map(a => decodeHTML(a))\n          }\n        })\n          console.log(decodedQuestions)\n        setQuestions()\n      }, [encodedQuestions])\n    return (\n        <div>\n            <div><ul>\n        {encodedQuestions.map((result,i)=>(\n          <li key = {i} >\n            q: {result.question}\n\n            a: {result.correct_answer}\n          </li>\n\n\n\n        ))}\n      </ul></div>\n        </div>\n    )\n}\n\nexport default Decoded\n"]},"metadata":{},"sourceType":"module"}