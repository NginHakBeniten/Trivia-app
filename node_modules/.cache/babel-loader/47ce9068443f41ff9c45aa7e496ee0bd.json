{"ast":null,"code":"var _jsxFileName = \"/Users/musubiappleidgmail.com/Desktop/Projects/Quiz-trial/src/Components/FetchButton.js\";\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nfunction FetchButton(props) {\n  // const questionCategory = useSelector(\n  //   (state) => state.options.question_category)\n  // // )\n  // const questionDifficulty = useSelector(\n  //   (state) => state.options.question_difficulty\n  // // )\n  // const questionType = useSelector((state) => state.options.question_type)\n  // const questionAmount = useSelector(\n  //   (state) => state.options.amount_of_questions\n  // )\n  const questionIndex = useSelector(state => state.index);\n  const dispatch = useDispatch();\n\n  const setLoading = value => {\n    dispatch({\n      type: 'CHANGE_LOADING',\n      loading: value\n    });\n  };\n\n  const setQuestions = value => {\n    dispatch({\n      type: 'SET_QUESTIONS',\n      questions: value\n    });\n  };\n\n  const handleQuery = async () => {\n    let apiUrl = `https://opentdb.com/api.php?amount=10&difficulty=hard&type=boolean`;\n\n    if (questionCategory.length) {\n      apiUrl = apiUrl.concat(`&category=${questionCategory}`);\n    }\n\n    if (questionDifficulty.length) {\n      apiUrl = apiUrl.concat(`&difficulty=${questionDifficulty}`);\n    }\n\n    if (questionType.length) {\n      apiUrl = apiUrl.concat(`&type=${questionType}`);\n    }\n\n    setLoading(true);\n    await fetch(apiUrl).then(res => res.json()).then(response => {\n      setQuestions(response.results);\n      setLoading(false);\n    });\n\n    if (questionIndex > 0) {\n      dispatch({\n        type: 'SET_INDEX',\n        index: 0\n      });\n      dispatch({\n        type: 'SET_SCORE',\n        score: 0\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleQuery,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 10\n    }\n  }, props.text);\n}\n\nexport default FetchButton;","map":{"version":3,"sources":["/Users/musubiappleidgmail.com/Desktop/Projects/Quiz-trial/src/Components/FetchButton.js"],"names":["React","useSelector","useDispatch","FetchButton","props","questionIndex","state","index","dispatch","setLoading","value","type","loading","setQuestions","questions","handleQuery","apiUrl","questionCategory","length","concat","questionDifficulty","questionType","fetch","then","res","json","response","results","score","text"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAMC,aAAa,GAAGJ,WAAW,CAAEK,KAAD,IAAWA,KAAK,CAACC,KAAlB,CAAjC;AAEA,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;;AAEA,QAAMO,UAAU,GAAIC,KAAD,IAAW;AAC5BF,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAE,gBADC;AAEPC,MAAAA,OAAO,EAAEF;AAFF,KAAD,CAAR;AAID,GALD;;AAOA,QAAMG,YAAY,GAAIH,KAAD,IAAW;AAC9BF,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAE,eADC;AAEPG,MAAAA,SAAS,EAAEJ;AAFJ,KAAD,CAAR;AAID,GALD;;AAOA,QAAMK,WAAW,GAAG,YAAY;AAC5B,QAAIC,MAAM,GAAI,oEAAd;;AAEF,QAAIC,gBAAgB,CAACC,MAArB,EAA6B;AAC3BF,MAAAA,MAAM,GAAGA,MAAM,CAACG,MAAP,CAAe,aAAYF,gBAAiB,EAA5C,CAAT;AACD;;AAED,QAAIG,kBAAkB,CAACF,MAAvB,EAA+B;AAC7BF,MAAAA,MAAM,GAAGA,MAAM,CAACG,MAAP,CAAe,eAAcC,kBAAmB,EAAhD,CAAT;AACD;;AAED,QAAIC,YAAY,CAACH,MAAjB,EAAyB;AACvBF,MAAAA,MAAM,GAAGA,MAAM,CAACG,MAAP,CAAe,SAAQE,YAAa,EAApC,CAAT;AACD;;AAEDZ,IAAAA,UAAU,CAAC,IAAD,CAAV;AAEA,UAAMa,KAAK,CAACN,MAAD,CAAL,CACHO,IADG,CACGC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADX,EAEHF,IAFG,CAEGG,QAAD,IAAc;AAClBb,MAAAA,YAAY,CAACa,QAAQ,CAACC,OAAV,CAAZ;AACAlB,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KALG,CAAN;;AAOA,QAAIJ,aAAa,GAAG,CAApB,EAAuB;AACrBG,MAAAA,QAAQ,CAAC;AACPG,QAAAA,IAAI,EAAE,WADC;AAEPJ,QAAAA,KAAK,EAAE;AAFA,OAAD,CAAR;AAKAC,MAAAA,QAAQ,CAAC;AACPG,QAAAA,IAAI,EAAE,WADC;AAEPiB,QAAAA,KAAK,EAAE;AAFA,OAAD,CAAR;AAID;AACF,GAnCD;;AAqCA,sBAAO;AAAQ,IAAA,OAAO,EAAEb,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+BX,KAAK,CAACyB,IAArC,CAAP;AACD;;AACD,eAAe1B,WAAf","sourcesContent":["import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nfunction FetchButton(props) {\n  // const questionCategory = useSelector(\n  //   (state) => state.options.question_category)\n  // // )\n  // const questionDifficulty = useSelector(\n  //   (state) => state.options.question_difficulty\n  // // )\n  // const questionType = useSelector((state) => state.options.question_type)\n  // const questionAmount = useSelector(\n  //   (state) => state.options.amount_of_questions\n  // )\n  const questionIndex = useSelector((state) => state.index)\n\n  const dispatch = useDispatch()\n\n  const setLoading = (value) => {\n    dispatch({\n      type: 'CHANGE_LOADING',\n      loading: value,\n    })\n  }\n\n  const setQuestions = (value) => {\n    dispatch({\n      type: 'SET_QUESTIONS',\n      questions: value,\n    })\n  }\n\n  const handleQuery = async () => {\n      let apiUrl = `https://opentdb.com/api.php?amount=10&difficulty=hard&type=boolean`\n\n    if (questionCategory.length) {\n      apiUrl = apiUrl.concat(`&category=${questionCategory}`)\n    }\n\n    if (questionDifficulty.length) {\n      apiUrl = apiUrl.concat(`&difficulty=${questionDifficulty}`)\n    }\n\n    if (questionType.length) {\n      apiUrl = apiUrl.concat(`&type=${questionType}`)\n    }\n\n    setLoading(true)\n\n    await fetch(apiUrl)\n      .then((res) => res.json())\n      .then((response) => {\n        setQuestions(response.results)\n        setLoading(false)\n      })\n\n    if (questionIndex > 0) {\n      dispatch({\n        type: 'SET_INDEX',\n        index: 0,\n      })\n\n      dispatch({\n        type: 'SET_SCORE',\n        score: 0,\n      })\n    }\n  }\n\n  return <button onClick={handleQuery}>{props.text}</button>\n}\nexport default FetchButton\n"]},"metadata":{},"sourceType":"module"}