{"ast":null,"code":"var _jsxFileName = \"/Users/musubiappleidgmail.com/Desktop/ClientError/Reacterror/quiz-app-master/starter/src/Components/Settings.js\";\nimport React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport FetchButton from './FetchButton';\n\nfunction Settings() {\n  const [options, setOptions] = useState(null);\n  const loading = useSelector(state => state.options.loading);\n  const questionCategory = useSelector(state => state.options.question_category);\n  const questionDifficulty = useSelector(state => state.options.question_difficulty);\n  const questionType = useSelector(state => state.options.question_type);\n  const questionAmount = useSelector(state => state.options.amount_of_questions);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const apiUrl = `https://opentdb.com/api.php?amount=10&difficulty=hard&type=boolean`;\n\n    const handleLoadingChange = value => {\n      dispatch({\n        type: 'CHANGE_LOADING',\n        loading: value\n      });\n    };\n\n    handleLoadingChange(true);\n    fetch(apiUrl).then(res => res.json()).then(response => {\n      handleLoadingChange(false);\n      setOptions(response.trivia_categories);\n    });\n  }, [setOptions, dispatch]);\n\n  const handleCategoryChange = event => {\n    dispatch({\n      type: 'CHANGE_CATEGORY',\n      question_category: event.target.value\n    });\n  }; //   const handleDifficultyChange = (event) => {\n  //     dispatch({\n  //       type: 'CHANGE_DIFFICULTY',\n  //       question_difficulty: event.target.value,\n  //     })\n  //   }\n  //   const handleTypeChange = (event) => {\n  //     dispatch({\n  //       type: 'CHANGE_TYPE',\n  //       question_type: event.target.value,\n  //     })\n  //   }\n  //   const handleAmountChange = (event) => {\n  //     dispatch({\n  //       type: 'CHANGE_AMOUNT',\n  //       amount_of_questions: event.target.value,\n  //     })\n  //   }\n\n\n  if (!loading) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }, \"Welcome to the Trivia Challenge\"), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }\n    }, \"You will be presented with 10 True or false questions\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }\n    }, \"Can you score 10/10 ?\")), /*#__PURE__*/React.createElement(FetchButton, {\n      text: \"Begin!\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 10\n    }\n  }, \"LOADING...\");\n}\n\nexport default Settings;","map":{"version":3,"sources":["/Users/musubiappleidgmail.com/Desktop/ClientError/Reacterror/quiz-app-master/starter/src/Components/Settings.js"],"names":["React","useEffect","useState","useSelector","useDispatch","FetchButton","Settings","options","setOptions","loading","state","questionCategory","question_category","questionDifficulty","question_difficulty","questionType","question_type","questionAmount","amount_of_questions","dispatch","apiUrl","handleLoadingChange","value","type","fetch","then","res","json","response","trivia_categories","handleCategoryChange","event","target"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,SAASC,QAAT,GAAoB;AAClB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,IAAD,CAAtC;AAEA,QAAMO,OAAO,GAAGN,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACH,OAAN,CAAcE,OAA1B,CAA3B;AAEA,QAAME,gBAAgB,GAAGR,WAAW,CACjCO,KAAD,IAAWA,KAAK,CAACH,OAAN,CAAcK,iBADS,CAApC;AAGA,QAAMC,kBAAkB,GAAGV,WAAW,CACnCO,KAAD,IAAWA,KAAK,CAACH,OAAN,CAAcO,mBADW,CAAtC;AAGA,QAAMC,YAAY,GAAGZ,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACH,OAAN,CAAcS,aAA1B,CAAhC;AACA,QAAMC,cAAc,GAAGd,WAAW,CAC/BO,KAAD,IAAWA,KAAK,CAACH,OAAN,CAAcW,mBADO,CAAlC;AAIA,QAAMC,QAAQ,GAAGf,WAAW,EAA5B;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMmB,MAAM,GAAI,oEAAhB;;AAEA,UAAMC,mBAAmB,GAAIC,KAAD,IAAW;AACrCH,MAAAA,QAAQ,CAAC;AACPI,QAAAA,IAAI,EAAE,gBADC;AAEPd,QAAAA,OAAO,EAAEa;AAFF,OAAD,CAAR;AAID,KALD;;AAOAD,IAAAA,mBAAmB,CAAC,IAAD,CAAnB;AAEAG,IAAAA,KAAK,CAACJ,MAAD,CAAL,CACGK,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESG,QAAD,IAAc;AAClBP,MAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACAb,MAAAA,UAAU,CAACoB,QAAQ,CAACC,iBAAV,CAAV;AACD,KALH;AAMD,GAlBQ,EAkBN,CAACrB,UAAD,EAAaW,QAAb,CAlBM,CAAT;;AAoBA,QAAMW,oBAAoB,GAAIC,KAAD,IAAW;AACtCZ,IAAAA,QAAQ,CAAC;AACPI,MAAAA,IAAI,EAAE,iBADC;AAEPX,MAAAA,iBAAiB,EAAEmB,KAAK,CAACC,MAAN,CAAaV;AAFzB,KAAD,CAAR;AAID,GALD,CAtCkB,CA6CpB;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAEE,MAAI,CAACb,OAAL,EAAc;AACZ,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+DAFF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADF,CALF,eAWE,oBAAC,WAAD;AAAa,MAAA,IAAI,EAAC,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXF,CADF;AAeD;;AAED,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACD;;AACD,eAAeH,QAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport FetchButton from './FetchButton'\n\nfunction Settings() {\n  const [options, setOptions] = useState(null)\n\n  const loading = useSelector((state) => state.options.loading)\n\n  const questionCategory = useSelector(\n    (state) => state.options.question_category\n  )\n  const questionDifficulty = useSelector(\n    (state) => state.options.question_difficulty\n  )\n  const questionType = useSelector((state) => state.options.question_type)\n  const questionAmount = useSelector(\n    (state) => state.options.amount_of_questions\n  )\n\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    const apiUrl = `https://opentdb.com/api.php?amount=10&difficulty=hard&type=boolean`\n\n    const handleLoadingChange = (value) => {\n      dispatch({\n        type: 'CHANGE_LOADING',\n        loading: value,\n      })\n    }\n\n    handleLoadingChange(true)\n\n    fetch(apiUrl)\n      .then((res) => res.json())\n      .then((response) => {\n        handleLoadingChange(false)\n        setOptions(response.trivia_categories)\n      })\n  }, [setOptions, dispatch])\n\n  const handleCategoryChange = (event) => {\n    dispatch({\n      type: 'CHANGE_CATEGORY',\n      question_category: event.target.value,\n    })\n  }\n\n//   const handleDifficultyChange = (event) => {\n//     dispatch({\n//       type: 'CHANGE_DIFFICULTY',\n//       question_difficulty: event.target.value,\n//     })\n//   }\n\n//   const handleTypeChange = (event) => {\n//     dispatch({\n//       type: 'CHANGE_TYPE',\n//       question_type: event.target.value,\n//     })\n//   }\n\n//   const handleAmountChange = (event) => {\n//     dispatch({\n//       type: 'CHANGE_AMOUNT',\n//       amount_of_questions: event.target.value,\n//     })\n//   }\n\n  if (!loading) {\n    return (\n      <div>\n        <h1>Welcome to the Trivia Challenge</h1>\n        <h2>You will be presented with 10 True or false questions</h2>\n\n      \n        <div>\n          <h2>Can you score 10/10 ?</h2>\n          \n            \n        </div>\n\n        <FetchButton text=\"Begin!\" />\n      </div>\n    )\n  }\n\n  return <p>LOADING...</p>\n}\nexport default Settings\n"]},"metadata":{},"sourceType":"module"}