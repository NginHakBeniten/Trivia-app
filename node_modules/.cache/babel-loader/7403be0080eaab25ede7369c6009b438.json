{"ast":null,"code":"var _jsxFileName = \"/Users/musubiappleidgmail.com/Desktop/Projects/Quiz-trial/src/Components/FetchButton.js\";\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nfunction FetchButton(props) {\n  const questionCategory = useSelector(state => state.options.question_category);\n  const questionDifficulty = useSelector(state => state.options.question_difficulty);\n  const questionType = useSelector(state => state.options.question_type);\n  const questionAmount = useSelector(state => state.options.amount_of_questions);\n  const questionIndex = useSelector(state => state.index);\n  const dispatch = useDispatch();\n\n  const setLoading = value => {\n    dispatch({\n      type: 'CHANGE_LOADING',\n      loading: value\n    });\n  };\n\n  const setQuestions = value => {\n    dispatch({\n      type: 'SET_QUESTIONS',\n      questions: value\n    });\n  };\n\n  const handleQuery = async () => {\n    const apiUrl = `https://opentdb.com/api.php?amount=10&difficulty=hard&type=boolean`; // if (questionCategory.length) {\n    //   apiUrl = apiUrl.concat(`&category=${questionCategory}`)\n    // }\n    // if (questionDifficulty.length) {\n    //   apiUrl = apiUrl.concat(`&difficulty=${questionDifficulty}`)\n    // }\n    // if (questionType.length) {\n    //   apiUrl = apiUrl.concat(`&type=${questionType}`)\n    // }\n\n    setLoading(true);\n    await fetch(apiUrl).then(res => res.json()).then(response => {\n      setQuestions(response.results);\n      setLoading(false);\n    });\n\n    if (questionIndex > 0) {\n      dispatch({\n        type: 'SET_INDEX',\n        index: 0\n      });\n      dispatch({\n        type: 'SET_SCORE',\n        score: 0\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleQuery,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 10\n    }\n  }, props.text);\n}\n\nexport default FetchButton;","map":{"version":3,"sources":["/Users/musubiappleidgmail.com/Desktop/Projects/Quiz-trial/src/Components/FetchButton.js"],"names":["React","useSelector","useDispatch","FetchButton","props","questionCategory","state","options","question_category","questionDifficulty","question_difficulty","questionType","question_type","questionAmount","amount_of_questions","questionIndex","index","dispatch","setLoading","value","type","loading","setQuestions","questions","handleQuery","apiUrl","fetch","then","res","json","response","results","score","text"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;;AAEE,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAC5B,QAAMC,gBAAgB,GAAGJ,WAAW,CACjCK,KAAD,IAAWA,KAAK,CAACC,OAAN,CAAcC,iBADS,CAApC;AAGA,QAAMC,kBAAkB,GAAGR,WAAW,CACnCK,KAAD,IAAWA,KAAK,CAACC,OAAN,CAAcG,mBADW,CAAtC;AAGA,QAAMC,YAAY,GAAGV,WAAW,CAAEK,KAAD,IAAWA,KAAK,CAACC,OAAN,CAAcK,aAA1B,CAAhC;AACA,QAAMC,cAAc,GAAGZ,WAAW,CAC/BK,KAAD,IAAWA,KAAK,CAACC,OAAN,CAAcO,mBADO,CAAlC;AAGA,QAAMC,aAAa,GAAGd,WAAW,CAAEK,KAAD,IAAWA,KAAK,CAACU,KAAlB,CAAjC;AAEA,QAAMC,QAAQ,GAAGf,WAAW,EAA5B;;AAEA,QAAMgB,UAAU,GAAIC,KAAD,IAAW;AAC5BF,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAE,gBADC;AAEPC,MAAAA,OAAO,EAAEF;AAFF,KAAD,CAAR;AAID,GALD;;AAOA,QAAMG,YAAY,GAAIH,KAAD,IAAW;AAC9BF,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAE,eADC;AAEPG,MAAAA,SAAS,EAAEJ;AAFJ,KAAD,CAAR;AAID,GALD;;AAOA,QAAMK,WAAW,GAAG,YAAY;AAC5B,UAAMC,MAAM,GAAI,oEAAhB,CAD4B,CAG9B;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;;AAEAP,IAAAA,UAAU,CAAC,IAAD,CAAV;AAEA,UAAMQ,KAAK,CAACD,MAAD,CAAL,CACHE,IADG,CACGC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADX,EAEHF,IAFG,CAEGG,QAAD,IAAc;AAClBR,MAAAA,YAAY,CAACQ,QAAQ,CAACC,OAAV,CAAZ;AACAb,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KALG,CAAN;;AAOA,QAAIH,aAAa,GAAG,CAApB,EAAuB;AACrBE,MAAAA,QAAQ,CAAC;AACPG,QAAAA,IAAI,EAAE,WADC;AAEPJ,QAAAA,KAAK,EAAE;AAFA,OAAD,CAAR;AAKAC,MAAAA,QAAQ,CAAC;AACPG,QAAAA,IAAI,EAAE,WADC;AAEPY,QAAAA,KAAK,EAAE;AAFA,OAAD,CAAR;AAID;AACF,GAnCD;;AAqCA,sBAAO;AAAQ,IAAA,OAAO,EAAER,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+BpB,KAAK,CAAC6B,IAArC,CAAP;AACD;;AACD,eAAe9B,WAAf","sourcesContent":["import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\n  function FetchButton(props) {\n  const questionCategory = useSelector(\n    (state) => state.options.question_category)\n  \n  const questionDifficulty = useSelector(\n    (state) => state.options.question_difficulty\n  )\n  const questionType = useSelector((state) => state.options.question_type)\n  const questionAmount = useSelector(\n    (state) => state.options.amount_of_questions\n  )\n  const questionIndex = useSelector((state) => state.index)\n\n  const dispatch = useDispatch()\n\n  const setLoading = (value) => {\n    dispatch({\n      type: 'CHANGE_LOADING',\n      loading: value,\n    })\n  }\n\n  const setQuestions = (value) => {\n    dispatch({\n      type: 'SET_QUESTIONS',\n      questions: value,\n    })\n  }\n\n  const handleQuery = async () => {\n      const apiUrl = `https://opentdb.com/api.php?amount=10&difficulty=hard&type=boolean`\n\n    // if (questionCategory.length) {\n    //   apiUrl = apiUrl.concat(`&category=${questionCategory}`)\n    // }\n\n    // if (questionDifficulty.length) {\n    //   apiUrl = apiUrl.concat(`&difficulty=${questionDifficulty}`)\n    // }\n\n    // if (questionType.length) {\n    //   apiUrl = apiUrl.concat(`&type=${questionType}`)\n    // }\n\n    setLoading(true)\n\n    await fetch(apiUrl)\n      .then((res) => res.json())\n      .then((response) => {\n        setQuestions(response.results)\n        setLoading(false)\n      })\n\n    if (questionIndex > 0) {\n      dispatch({\n        type: 'SET_INDEX',\n        index: 0,\n      })\n\n      dispatch({\n        type: 'SET_SCORE',\n        score: 0,\n      })\n    }\n  }\n\n  return <button onClick={handleQuery}>{props.text}</button>\n}\nexport default FetchButton\n"]},"metadata":{},"sourceType":"module"}