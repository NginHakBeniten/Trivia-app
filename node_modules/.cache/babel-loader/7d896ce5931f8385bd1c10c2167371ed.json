{"ast":null,"code":"var _jsxFileName = \"/Users/musubiappleidgmail.com/Desktop/Projects/Quiz-trial/src/Components/Decoded.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nconst Decoded = () => {\n  const results = useSelector(state => state.questions);\n  const [questions, setQuestions] = useState([]);\n  const questionIndex = useSelector(state => state.index);\n  const question = questions[questionIndex];\n\n  if (questionIndex + 1 <= questions.length) {\n    setTimeout(() => {\n      //   setAnswerSelected(false)\n      //   setSelectedAnswer(null)\n      dispatch({\n        type: 'SET_INDEX',\n        index: questionIndex + 1\n      });\n    }, 250);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 18\n    }\n  }, results.map((result, i) => /*#__PURE__*/React.createElement(\"li\", {\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 12\n    }\n  }, \" \", [questionIndex - 1], \": \", result.question, \" \"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }, \"  a: \", result.correct_answer, \" \"))))));\n};\n\nexport default Decoded;","map":{"version":3,"sources":["/Users/musubiappleidgmail.com/Desktop/Projects/Quiz-trial/src/Components/Decoded.js"],"names":["React","useState","useEffect","useSelector","useDispatch","Decoded","results","state","questions","setQuestions","questionIndex","index","question","length","setTimeout","dispatch","type","map","result","i","correct_answer"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;;AAIE,MAAMC,OAAO,GAAG,MAAM;AAEpB,QAAMC,OAAO,GAAGH,WAAW,CAAEI,KAAD,IAAWA,KAAK,CAACC,SAAlB,CAA3B;AACA,QAAM,CAACA,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAMS,aAAa,GAAGP,WAAW,CAAEI,KAAD,IAAWA,KAAK,CAACI,KAAlB,CAAjC;AACA,QAAMC,QAAQ,GAAGJ,SAAS,CAACE,aAAD,CAA1B;;AAEA,MAAIA,aAAa,GAAG,CAAhB,IAAqBF,SAAS,CAACK,MAAnC,EAA2C;AACvCC,IAAAA,UAAU,CAAC,MAAM;AACjB;AACA;AAGEC,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAE,WADC;AAEPL,QAAAA,KAAK,EAAED,aAAa,GAAE;AAFf,OAAD,CAAR;AAKD,KAVS,EAUP,GAVO,CAAV;AAWD;;AAGH,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACRJ,OAAO,CAACW,GAAR,CAAY,CAACC,MAAD,EAAQC,CAAR,kBACX;AAAI,IAAA,GAAG,EAAIA,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAO,CAACT,aAAa,GAAC,CAAf,CAAP,QAA4BQ,MAAM,CAACN,QAAnC,MADD,eAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAWM,MAAM,CAACE,cAAlB,MAHA,CADD,CADQ,CAAL,CADJ,CADJ;AAgBH,CAtCC;;AAwCF,eAAef,OAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\n\n\n  const Decoded = () => {\n    \n    const results = useSelector((state) => state.questions) \n    const [questions, setQuestions] = useState([])\n    const questionIndex = useSelector((state) => state.index)\n    const question = questions[questionIndex]\n\n    if (questionIndex + 1 <= questions.length) {\n        setTimeout(() => {\n        //   setAnswerSelected(false)\n        //   setSelectedAnswer(null)\n  \n  \n          dispatch({\n            type: 'SET_INDEX',\n            index: questionIndex +1,\n          \n          })\n        }, 250)\n      }\n   \n     \n    return (\n        <div>\n            <div><ul>\n        {results.map((result,i)=>(\n          <li key = {i} >\n           <div> {[questionIndex-1]}: {result.question} </div>\n\n          <div>  a: {result.correct_answer} </div>\n          </li>\n\n\n\n        ))}\n      </ul></div>\n        </div>\n    )\n}\n\nexport default Decoded\n"]},"metadata":{},"sourceType":"module"}