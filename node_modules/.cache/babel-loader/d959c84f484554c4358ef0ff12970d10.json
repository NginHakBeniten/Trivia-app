{"ast":null,"code":"var _jsxFileName = \"/Users/musubiappleidgmail.com/Desktop/Projects/Quiz-trial/src/Components/FinalScreen.js\";\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Question from './Question'; // import Settings from './Settings'\n// import FetchButton from './FetchButton'\n\nfunction FinalScreen(props) {\n  const score = useSelector(state => state.score);\n  const dispatch = useDispatch();\n\n  const replay = () => {\n    dispatch({\n      type: 'SET_INDEX',\n      index: 0\n    });\n    dispatch({\n      type: 'SET_SCORE',\n      score: 0\n    });\n  };\n\n  const decodedQuestions = () => {\n    const question = questions[questionIndex];\n    const answer = question && question.correct_answer;\n  }; // const settings = () => {\n  //   dispatch({\n  //     type: 'SET_SCORE',\n  //     score: 0,\n  //   })\n  // }\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 12\n    }\n  }, props.response && props.response.map(index => /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 54\n    }\n  }, index.question)))), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, \"Final Score: \", score, \"/10\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: replay,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, \"Play again\"));\n}\n\nexport default FinalScreen;","map":{"version":3,"sources":["/Users/musubiappleidgmail.com/Desktop/Projects/Quiz-trial/src/Components/FinalScreen.js"],"names":["React","useSelector","useDispatch","Question","FinalScreen","props","score","state","dispatch","replay","type","index","decodedQuestions","question","questions","questionIndex","answer","correct_answer","response","map"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,QAAP,MAAqB,YAArB,C,CACA;AAEA;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAC1B,QAAMC,KAAK,GAAGL,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACD,KAAlB,CAAzB;AAEA,QAAME,QAAQ,GAAGN,WAAW,EAA5B;;AAEA,QAAMO,MAAM,GAAG,MAAM;AACnBD,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAE,WADC;AAEPC,MAAAA,KAAK,EAAE;AAFA,KAAD,CAAR;AAKAH,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAE,WADC;AAEPJ,MAAAA,KAAK,EAAE;AAFA,KAAD,CAAR;AAMD,GAZD;;AAcA,QAAMM,gBAAgB,GAAG,MAAM;AAC7B,UAAMC,QAAQ,GAAGC,SAAS,CAACC,aAAD,CAA1B;AACA,UAAMC,MAAM,GAAGH,QAAQ,IAAIA,QAAQ,CAACI,cAApC;AAGD,GALD,CAnB0B,CA0B1B;AACA;AACA;AACA;AACA;AACA;;;AAEA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACJZ,KAAK,CAACa,QAAN,IAAkBb,KAAK,CAACa,QAAN,CAAeC,GAAf,CAAmBR,KAAK,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAC5CA,KAAK,CAACE,QADsC,CAA5B,CADd,CAAL,CADF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAkBP,KAAlB,QATF,eAUE;AAAQ,IAAA,OAAO,EAAEG,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAVF,CADF;AAgBD;;AACD,eAAeL,WAAf","sourcesContent":["import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport Question from './Question'\n// import Settings from './Settings'\n\n// import FetchButton from './FetchButton'\n\nfunction FinalScreen(props) {\n  const score = useSelector((state) => state.score)\n\n  const dispatch = useDispatch()\n\n  const replay = () => {\n    dispatch({\n      type: 'SET_INDEX',\n      index: 0,\n    })\n\n    dispatch({\n      type: 'SET_SCORE',\n      score: 0,\n    })\n    \n \n  }\n\n  const decodedQuestions = () => {\n    const question = questions[questionIndex]\n    const answer = question && question.correct_answer\n\n\n  }\n\n  // const settings = () => {\n  //   dispatch({\n  //     type: 'SET_SCORE',\n  //     score: 0,\n  //   })\n  // }\n\n  return (\n    <div>\n      <div><p>\n      {props.response && props.response.map(index => <div>\n        {index.question}\n      </div>)} \n      </p>\n    \n      \n    </div>\n      <h3>Final Score: {score}/10</h3>\n      <button onClick={replay}>Play again</button>\n     \n     \n    </div>\n  )\n}\nexport default FinalScreen\n"]},"metadata":{},"sourceType":"module"}