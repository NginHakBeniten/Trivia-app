{"ast":null,"code":"var _jsxFileName = \"/Users/musubiappleidgmail.com/Desktop/ClientError/Reacterror/quiz-app-master/starter/src/Components/Settings.js\";\nimport React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport FetchButton from './FetchButton';\n\nfunction Settings() {\n  const [options, setOptions] = useState(null);\n  const loading = useSelector(state => state.options.loading);\n  const questionCategory = useSelector(state => state.options.question_category);\n  const questionDifficulty = useSelector(state => state.options.question_difficulty);\n  const questionType = useSelector(state => state.options.question_type);\n  const questionAmount = useSelector(state => state.options.amount_of_questions);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const apiUrl = `https://opentdb.com/api_category.php`;\n\n    const handleLoadingChange = value => {\n      dispatch({\n        type: 'CHANGE_LOADING',\n        loading: value\n      });\n    };\n\n    handleLoadingChange(true);\n    fetch(apiUrl).then(res => res.json()).then(response => {\n      handleLoadingChange(false);\n      setOptions(response.trivia_categories);\n    });\n  }, [setOptions, dispatch]);\n\n  const handleCategoryChange = event => {\n    dispatch({\n      type: 'CHANGE_CATEGORY',\n      question_category: event.target.value\n    });\n  };\n\n  const handleDifficultyChange = event => {\n    dispatch({\n      type: 'CHANGE_DIFFICULTY',\n      question_difficulty: event.target.value\n    });\n  };\n\n  const handleTypeChange = event => {\n    dispatch({\n      type: 'CHANGE_TYPE',\n      question_type: event.target.value\n    });\n  };\n\n  const handleAmountChange = event => {\n    dispatch({\n      type: 'CHANGE_AMOUNT',\n      amount_of_questions: event.target.value\n    });\n  };\n\n  if (!loading) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }, \"Quiz App\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }\n    }, \"Select Category:\"), /*#__PURE__*/React.createElement(\"select\", {\n      value: questionCategory,\n      onChange: handleCategoryChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }\n    }, \"All\"), options && options.length && options.map(option => /*#__PURE__*/React.createElement(\"option\", {\n      value: option.id,\n      key: option.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }\n    }, option.name)))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }\n    }, \"Select Difficulty:\"), /*#__PURE__*/React.createElement(\"select\", {\n      value: questionDifficulty,\n      onChange: handleDifficultyChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      key: \"difficulty-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }\n    }, \"All\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"easy\",\n      key: \"difficulty-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }\n    }, \"Easy\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"medium\",\n      key: \"difficulty-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }\n    }, \"Medium\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"hard\",\n      key: \"difficulty-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }\n    }, \"Hard\"))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }\n    }, \"Select Question Type:\"), /*#__PURE__*/React.createElement(\"select\", {\n      value: questionType,\n      onChange: handleTypeChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      key: \"type-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }\n    }, \"All\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"multiple\",\n      key: \"type-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }\n    }, \"Multiple Choice\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"boolean\",\n      key: \"type-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }\n    }, \"True/False\"))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }\n    }, \"Amount of Questions:\"), /*#__PURE__*/React.createElement(\"input\", {\n      value: questionAmount,\n      onChange: handleAmountChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(FetchButton, {\n      text: \"Get started!\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 10\n    }\n  }, \"LOADING...\");\n}\n\nexport default Settings;","map":{"version":3,"sources":["/Users/musubiappleidgmail.com/Desktop/ClientError/Reacterror/quiz-app-master/starter/src/Components/Settings.js"],"names":["React","useEffect","useState","useSelector","useDispatch","FetchButton","Settings","options","setOptions","loading","state","questionCategory","question_category","questionDifficulty","question_difficulty","questionType","question_type","questionAmount","amount_of_questions","dispatch","apiUrl","handleLoadingChange","value","type","fetch","then","res","json","response","trivia_categories","handleCategoryChange","event","target","handleDifficultyChange","handleTypeChange","handleAmountChange","length","map","option","id","name"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport FetchButton from './FetchButton'\n\nfunction Settings() {\n  const [options, setOptions] = useState(null)\n\n  const loading = useSelector((state) => state.options.loading)\n\n  const questionCategory = useSelector(\n    (state) => state.options.question_category\n  )\n  const questionDifficulty = useSelector(\n    (state) => state.options.question_difficulty\n  )\n  const questionType = useSelector((state) => state.options.question_type)\n  const questionAmount = useSelector(\n    (state) => state.options.amount_of_questions\n  )\n\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    const apiUrl = `https://opentdb.com/api_category.php`\n\n    const handleLoadingChange = (value) => {\n      dispatch({\n        type: 'CHANGE_LOADING',\n        loading: value,\n      })\n    }\n\n    handleLoadingChange(true)\n\n    fetch(apiUrl)\n      .then((res) => res.json())\n      .then((response) => {\n        handleLoadingChange(false)\n        setOptions(response.trivia_categories)\n      })\n  }, [setOptions, dispatch])\n\n  const handleCategoryChange = (event) => {\n    dispatch({\n      type: 'CHANGE_CATEGORY',\n      question_category: event.target.value,\n    })\n  }\n\n  const handleDifficultyChange = (event) => {\n    dispatch({\n      type: 'CHANGE_DIFFICULTY',\n      question_difficulty: event.target.value,\n    })\n  }\n\n  const handleTypeChange = (event) => {\n    dispatch({\n      type: 'CHANGE_TYPE',\n      question_type: event.target.value,\n    })\n  }\n\n  const handleAmountChange = (event) => {\n    dispatch({\n      type: 'CHANGE_AMOUNT',\n      amount_of_questions: event.target.value,\n    })\n  }\n\n  if (!loading) {\n    return (\n      <div>\n        <h1>Quiz App</h1>\n        <div>\n          <h2>Select Category:</h2>\n          <select value={questionCategory} onChange={handleCategoryChange}>\n            <option>All</option>\n            {options &&\n              options.length &&\n              options.map((option) => (\n                <option value={option.id} key={option.id}>\n                  {option.name}\n                </option>\n              ))}\n          </select>\n        </div>\n\n        <div>\n          <h2>Select Difficulty:</h2>\n          <select value={questionDifficulty} onChange={handleDifficultyChange}>\n            <option value=\"\" key=\"difficulty-0\">\n              All\n            </option>\n            <option value=\"easy\" key=\"difficulty-1\">\n              Easy\n            </option>\n            <option value=\"medium\" key=\"difficulty-2\">\n              Medium\n            </option>\n            <option value=\"hard\" key=\"difficulty-3\">\n              Hard\n            </option>\n          </select>\n        </div>\n\n        <div>\n          <h2>Select Question Type:</h2>\n          <select value={questionType} onChange={handleTypeChange}>\n            <option value=\"\" key=\"type-0\">\n              All\n            </option>\n            <option value=\"multiple\" key=\"type-1\">\n              Multiple Choice\n            </option>\n            <option value=\"boolean\" key=\"type-2\">\n              True/False\n            </option>\n          </select>\n        </div>\n\n        <div>\n          <h2>Amount of Questions:</h2>\n          <input value={questionAmount} onChange={handleAmountChange} />\n        </div>\n\n        <FetchButton text=\"Get started!\" />\n      </div>\n    )\n  }\n\n  return <p>LOADING...</p>\n}\nexport default Settings\n"]},"metadata":{},"sourceType":"module"}